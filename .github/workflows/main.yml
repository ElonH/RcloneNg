name: Build
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v1
      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Node ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: install dependencies
        run: |
          npm i
      - name: lint
        run: |
          npm run lint
      - name: build production
        run: |
          npm run build:prod
      - name: deploy github page
        if: github.event_name == 'push'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm run release -- -p dev && git reset HEAD~
          npm run deploy --  --name="ElonH" --email="elonhhuang@gmail.com"
  docker:		
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v3
        with:
          buildx-version: latest
          qemu-version: latest
      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      - name: Docker Login
        uses: Azure/docker-login@v1
        with:          
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Docker Build
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
        run: |
                docker buildx create --name mybuilder
                docker buildx use mybuilder
                docker buildx inspect --bootstrap
                DOCKER_IMAGE="$(echo ${GITHUB_REPOSITORY} | awk '{print tolower($0)}')"
                PUSH=""
                if [ "$GITHUB_EVENT_NAME" == "push" ]; then
                  PUSH="--push"
                fi
                docker buildx build --platform linux/amd64 --pull $PUSH -t $DOCKER_IMAGE .
